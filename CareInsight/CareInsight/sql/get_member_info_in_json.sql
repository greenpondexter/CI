SELECT SSS.*
FROM
(Select DISTINCT
'{"member_name": "'+CAST(m.MEMBER_KEY AS VARCHAR(20))+'",' AS MEMBER_NAME,
'"services_key": '+CAST(S.SERVICES_KEY AS VARCHAR(20))+',' AS SERVICES_KEY,
'"claim_id_key": '+CAST(S.CLAIM_ID_KEY AS VARCHAR(20))+',' AS CLAIM_ID_KEY, 
'"member_key": '+CAST(S.MEMBER_KEY AS VARCHAR(20))+',' AS MEMBER_KEY,
'"from_date": "'+CAST(REPLACE(S.FROM_DATE, '-', '') AS VARCHAR(15))+'",' AS FROM_DATE,
'"claim_id_key": '+CAST(S.CLAIM_ID_KEY AS VARCHAR(15))+',' AS CLAIM_ID_KEY, 
'"ud01_lbl": "'+CAST(cs.UD01_LBL AS VARCHAR(15))+'",' AS UD01_LBL,
'"ud02_lbl": "'+CAST(cs.UD02_LBL AS VARCHAR(15))+'",' AS UD02_LBL,
'"ud03_lbl": "'+CAST(cs.UD03_LBL AS VARCHAR(15))+'",' AS UD03_LBL,
'"ud04_lbl": "'+CAST(cs.UD04_LBL  AS VARCHAR(15))+'",' AS UD04_LBL,
'"ud05_lbl": "'+CAST(cs.UD05_LBL  AS VARCHAR(15))+'",' AS UD05_LBL,
'"ud06_lbl": "'+CAST(cs.UD06_LBL  AS VARCHAR(15))+'",' AS UD06_LBL,
'"ud07_lbl": "'+CAST(cs.UD07_LBL  AS VARCHAR(15))+'",' AS UD07_LBL,
'"ud08_lbl": "'+CAST(cs.UD08_LBL AS VARCHAR(15))+'",' AS UD08_LBL,
'"ud09_lbl": "'+CAST(cs.UD09_LBL AS VARCHAR(15))+'",' AS UD09_LBL,
'"ud010_lbl": "'+CAST(cs.UD10_LBL AS VARCHAR(15))+'",' AS UD10_LBL,
'"mr_line_desc1": "'+CAST(HCG.HCG_SETTING AS VARCHAR(40))+'",' AS MR_LINE_DESC1,
'"adm_date": "'+CAST(s.ADM_DATE_KEY AS VARCHAR(15))+'",'  AS ADM_DATE,
'"dis_date": "'+CAST(s.DIS_DATE_KEY AS VARCHAR(15))+'",'  AS DIS_DATE,
'"amt_paid": '+CAST(s.AMT_PAID AS VARCHAR(15))+',' AS AMT_PAID,
'"amt_allowed": '+CAST(s.AMT_ALLOWED AS VARCHAR(15))+',' AS AMT_ALLOWD,
'"icd_diag_code_and_desc": "'+CAST(d.ICD_DIAG_CODE_AND_DESC AS VARCHAR(40))+'",' AS ICD_DIAG_CODE_AND_DESC,
'"prov_id": "'+CAST(p.PROV_ID AS VARCHAR(20))+'",' AS PROV_ID,
'"pos_label": "'+CAST(pos.POS_LABEL AS VARCHAR(20))+'",' AS POS_LABEL,
'"qty_er_admits": '+CAST(COALESCE(s.QTY_ER_ADMITS, 0) AS VARCHAR(5))+',' AS QTY_ER_ADMITS,
'"ed_facility": "'+CAST((CASE WHEN HCGED.MR_LINE_KEY IS NOT NULL THEN ADM_FAC.PROV_NAME ELSE 'N/A' END) AS VARCHAR(25))+'",' AS ED_FACILITY,
'"admits": '+CAST(CASE WHEN HCG.HCG_SETTING = 'HIP' THEN S.MI_CASES ELSE 0 END AS VARCHAR(5))+',' AS ADMITS,
'"adm_drg": "'+CAST(DRG.DRG_LBL AS VARCHAR(50)) +'",' AS ADM_DRG,
'"admit_facility": "'+CAST((CASE WHEN ADM_FAC.PROV_KEY IS NULL THEN 'N/A' ELSE COALESCE(NULLIF(ADM_FAC.PROV_NAME,''),'N/A') END) AS VARCHAR(50)) +'",' AS ADMIT_FACILITY,
'"pcp_name": "'+CAST((CASE WHEN HCGPCP.MR_LINE_KEY IS NOT NULL THEN P.PROV_NAME ELSE 'N/A' END) AS VARCHAR(50)) +'",' AS PCP_NAME,
'"pcp_speciality": "'+CAST((CASE WHEN HCGPCP.MR_LINE_KEY IS NOT NULL THEN COALESCE(P.PROV_SPEC_DESC, 'N/A') ELSE 'N/A' END) AS VARCHAR(50)) +'",' AS PCP_SPECIALTY,
'"drug_name": "'+CAST((CASE WHEN HCGRX.MR_LINE_KEY IS NOT NULL THEN CAST(RX.RX_NDC_PROD_NAME AS VARCHAR(100)) ELSE 'N/A' END) AS VARCHAR(50)) +'",' AS DRUG_NAME,
'"drug_status": "'+CAST((CASE WHEN HCGRX.MR_LINE_KEY IS NOT NULL THEN RX.BRAND_STATUS ELSE 'N/A' END) AS VARCHAR(50)) +'",' AS DRUG_STATUS,
'"drug_gpi": "'+CAST((CASE WHEN HCGRX.MR_LINE_KEY IS NOT NULL THEN CAST(RX.GPI AS VARCHAR(25)) ELSE 'N/A' END) AS VARCHAR(50)) +'",' AS DRUG_GPI,
'"drug_provider": "'+CAST((CASE WHEN HCGRX.MR_LINE_KEY IS NOT NULL THEN  COALESCE(P.PROV_NAME, 'N/A') ELSE 'N/A' END) AS VARCHAR(50)) +'",' AS DRUG_PROVIDER,
'"drug_days_supply": "'+CAST(COALESCE(S.RX_DAYS_SUPPLY, 0) AS VARCHAR(50)) +'"},'  AS DRUG_DAYS_SUPPLY
FROM FACT_SERVICES S
LEFT JOIN dbo.DIM_CLIENT_SPECIFIC cs
ON CS.UDD_KEY = S.UDD_KEY
LEFT JOIN DIM_PROVIDER p
ON s.ATT_PROV_KEY = p.PROV_KEY
LEFT JOIN DIM_PROVIDER ADM_FAC
ON S.BILL_PROV_KEY = ADM_FAC.PROV_KEY
LEFT JOIN DIM_DRG DRG
ON S.DRG_KEY = DRG.DRG_KEY
LEFT JOIN DIM_HCG HCG
ON S.MR_LINE_CASE_KEY = HCG.MR_LINE_KEY
LEFT JOIN DIM_HCG HCGED
ON S.MR_LINE_CASE_KEY = HCGED.MR_LINE_KEY
   AND HCGED.HCG_LINE_LABEL = 'O11 - Emergency Room'
LEFT JOIN DIM_HCG HCGPCP
ON S.MR_LINE_CASE_KEY = HCGPCP.MR_LINE_KEY
	AND HCGPCP.HCG_LINE_LABEL = 'P32c - PROF Office/Home Visits - PCP'
LEFT JOIN DIM_DIAGNOSIS_ICD d
ON S.ICD_DIAG_01_KEY = d.ICD_DIAG_KEY
LEFT JOIN DIM_HCG HCGRX
ON S.MR_LINE_CASE_KEY = HCGRX.MR_LINE_KEY
	AND HCGRX.HCG_SETTING = 'RX'
LEFT JOIN DIM_RX RX
ON S.RX_NDC_KEY = RX.RX_NDC_KEY
LEFT JOIN DIM_POS pos 
ON pos.pos_key = s.pos_key
LEFT JOIN DIM_MEMBER m
ON s.MEMBER_KEY = m.MEMBER_KEY
JOIN dbo.MEMBER_LIST ML
ON S.MEMBER_KEY = ML.MEMBER_KEY
WHERE 
	 ADM_FAC.PROV_NAME NOT LIKE '%Penlop Care Hospital%'
	 ) SSS
order by SSS.member_key asc

--Query for enrollment datasource in json format 

SELECT MMM.*
FROM 
(
 Select DISTINCT 
'{"member_name": "'+CAST(m.MEMBER_KEY AS VARCHAR(20))+'",' AS MEMBER_NAME,
'"age": '+CAST(MI.AGE AS VARCHAR(5)) +',' AS AGE,
'"gender": "'+CAST(MI.GENDER AS VARCHAR(3)) +'",' AS GENDER,
'"member_key": '+CAST(MM.MEMBER_KEY AS VARCHAR(20))+',' AS MEMBER_KEY,
'"member_id": "'+CAST(M.MEMBER_ID AS VARCHAR(25)) +'",' AS MEMBER_ID,
'"from_date": "'+CAST(MM.DATE_KEY AS VARCHAR(15))+'",' AS FROM_DATE,
'"ud01_lbl": "'+CAST(cs.UD01_LBL AS VARCHAR(15))+'",' AS UD01_LBL,
'"ud02_lbl": "'+CAST(cs.UD02_LBL AS VARCHAR(15))+'",' AS UD02_LBL,
'"ud03_lbl": "'+CAST(cs.UD03_LBL AS VARCHAR(15))+'",' AS UD03_LBL,
'"ud04_lbl": "'+CAST(cs.UD04_LBL  AS VARCHAR(15))+'",' AS UD04_LBL,
'"ud05_lbl": "'+CAST(cs.UD05_LBL  AS VARCHAR(15))+'",' AS UD05_LBL,
'"ud06_lbl": "'+CAST(cs.UD06_LBL  AS VARCHAR(15))+'",' AS UD06_LBL,
'"ud07_lbl": "'+CAST(cs.UD07_LBL  AS VARCHAR(15))+'",' AS UD07_LBL,
'"ud08_lbl": "'+CAST(cs.UD08_LBL AS VARCHAR(15))+'",' AS UD08_LBL,
'"ud09_lbl": "'+CAST(cs.UD09_LBL AS VARCHAR(15))+'",' AS UD09_LBL,
'"ud010_lbl": "'+CAST(cs.UD10_LBL AS VARCHAR(15))+'",' AS UD10_LBL,
'"grp_name": "'+CAST(GRP.GROUP_NAME AS VARCHAR(35))+'",' AS GROUP_NAME,
'"mm_units": '+CAST(mm.MM_UNITS AS VARCHAR(5))+',' AS MM_UNITS,
'"pro_rx": '+CAST(COALESCE(mm.PRO_RX, 0) AS VARCHAR(20))+',' AS PRO_RX,
'"pro_ip": '+CAST(COALESCE(mm.PRO_IP, 0) AS VARCHAR(20))+',' AS PRO_IP,
'"pro_op": '+CAST(COALESCE(mm.PRO_OP, 0) AS VARCHAR(20))+',' AS PRO_OP,
'"pro_physician": '+CAST(COALESCE(mm.PRO_PHYSICIAN, 0) AS VARCHAR(20))+',' AS PRO_PHYSICIAN,
'"as_total": '+CAST(COALESCE(mm.AS_TOTAL, 0) AS VARCHAR(20))+'},' AS AS_TOTAL
from FACT_MEMBER_MONTH mm
LEFT JOIN DIM_CLIENT_SPECIFIC cs
on  mm.UDD_KEY = CS.UDD_KEY
LEFT JOIN DIM_MEMBER m
on mm.MEMBER_KEY = m.MEMBER_KEY
LEFT JOIN DIM_MEMBER_INFO mi
on MM.MEMBER_INFO_KEY = mi.MEMBER_INFO_KEY
LEFT JOIN DIM_GROUP GRP
ON MM.GRP_KEY = GRP.GRP_KEY
JOIN dbo.MEMBER_LIST ML
ON MM.MEMBER_KEY = ML.MEMBER_KEY
where MM.MEMBER_KEY < 100000
AND MM.MM_UNITS > 0
) MMM
order by MMM.MEMBER_KEY ASC
